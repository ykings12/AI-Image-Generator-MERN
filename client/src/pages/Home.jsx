import React, { useEffect, useState } from 'react';
import { Card, FormField, Loader } from '../components';
import c1Background from '../assets/c1.jpg'; // Import the background image

const RenderCards = ({ data, title, onCardClick }) => {
  if (data?.length > 0) {
    return (
      data.map((post) => <Card key={post._id} {...post} onCardClick={onCardClick} />)
    );
  }

  return (
    <h2 className="mt-5 font-bold text-[#6469ff] text-xl uppercase">{title}</h2>
  );
};

const Home = () => {
  const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState(null);
  const [searchText, setSearchText] = useState('');
  const [searchTimeout, setSearchTimeout] = useState(null);
  const [searchedResults, setSearchedResults] = useState(null);
  const [showModal, setShowModal] = useState(false);
  const [selectedPost, setSelectedPost] = useState(null);

  const fetchPosts = async () => {
    setLoading(true);

    try {
      const response = await fetch('http://localhost:8080/api/v1/post', {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
        },
      });

      if (response.ok) {
        const result = await response.json();
        setAllPosts(result.data.reverse());
      }
    } catch (err) {
      alert(err);
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    fetchPosts();
  }, []);

  const handleSearchChange = (e) => {
    clearTimeout(searchTimeout);
    setSearchText(e.target.value);

    setSearchTimeout(
      setTimeout(() => {
        const searchResult = allPosts.filter((item) => item.name.toLowerCase().includes(searchText.toLowerCase()) || item.prompt.toLowerCase().includes(searchText.toLowerCase()));
        setSearchedResults(searchResult);
      }, 500),
    );
  };

  const handleCardClick = (post) => {
    setSelectedPost(post);
    setShowModal(true);
  };

  return (
    <section className="max-w-7xl mx-auto">
      <div>
        <h1 className="font-extrabold text-white text-[32px]">The Community Showcase</h1>
        <p className="mt-2 text-gray-300 text-[14px] max-w-[500px]">Browse through a collection of imaginative and visually stunning images generated by Stability AI</p>
      </div>

      <div className="mt-16">
        <FormField
          labelName="Search posts"
          type="text"
          name="text"
          placeholder="Search something..."
          value={searchText}
          handleChange={handleSearchChange}
        />
      </div>

      <div className="mt-10">
        {loading ? (
          <div className="flex justify-center items-center">
            <Loader />
          </div>
        ) : (
          <>
            {searchText && (
              <h2 className="font-medium text-blue-300 text-xl mb-3">
                Showing Results for: <span className="text-white">{searchText}</span>
              </h2>
            )}
            <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
              <RenderCards
                data={searchText ? searchedResults : allPosts}
                title={searchText ? "No Search Results Found" : "No Posts Yet"}
                onCardClick={handleCardClick}
              />
            </div>
          </>
        )}
      </div>

      {showModal && selectedPost && (
        <div className="fixed inset-0 z-50 flex items-center justify-center overflow-x-hidden overflow-y-auto outline-none focus:outline-none">
          <div className="relative w-auto max-w-3xl mx-auto my-6 rounded-lg overflow-hidden">
            <div className="relative flex flex-col w-full bg-cover bg-center" style={{ backgroundImage: `url(${c1Background})` }}>
              <div className="p-6 flex-auto">
              <h3 className="text-3xl text-white font-semibold mb-4">{selectedPost.prompt}</h3>
                <img
                  src={selectedPost.photo}
                  alt={selectedPost.prompt}
                  className="w-full max-h-[70vh] object-contain border border-gray-300 hover:shadow-md outline-none"
                />
                <p className="mt-2 text-white">Created by: {selectedPost.name}</p>
              </div>
              <button
                className="absolute top-2 right-2 p-1 bg-transparent border-0 text-white text-xl leading-none font-semibold outline-none focus:outline-none"
                onClick={() => setShowModal(false)}
              >
                <span className="bg-transparent text-white h-6 w-6 text-2xl block outline-none focus:outline-none">
                  Ã—
                </span>
              </button>
            </div>
          </div>
        </div>
      )}

      
    </section>
  );
};

export default Home;
